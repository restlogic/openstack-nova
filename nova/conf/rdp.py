from bees import profiler as p
from oslo_config import cfg
rdp_group = cfg.OptGroup('rdp', title='RDP options', help='\nOptions under this group enable and configure Remote Desktop Protocol (\nRDP) related features.\n\nThis group is only relevant to Hyper-V users.\n')
RDP_OPTS = [cfg.BoolOpt('enabled', default=False, help='\nEnable Remote Desktop Protocol (RDP) related features.\n\nHyper-V, unlike the majority of the hypervisors employed on Nova compute\nnodes, uses RDP instead of VNC and SPICE as a desktop sharing protocol to\nprovide instance console access. This option enables RDP for graphical\nconsole access for virtual machines created by Hyper-V.\n\n**Note:** RDP should only be enabled on compute nodes that support the Hyper-V\nvirtualization platform.\n\nRelated options:\n\n* ``compute_driver``: Must be hyperv.\n\n'), cfg.URIOpt('html5_proxy_base_url', schemes=['http', 'https'], default='http://127.0.0.1:6083/', help='\nThe URL an end user would use to connect to the RDP HTML5 console proxy.\nThe console proxy service is called with this token-embedded URL and\nestablishes the connection to the proper instance.\n\nAn RDP HTML5 console proxy service will need to be configured to listen on the\naddress configured here. Typically the console proxy service would be run on a\ncontroller node. The localhost address used as default would only work in a\nsingle node environment i.e. devstack.\n\nAn RDP HTML5 proxy allows a user to access via the web the text or graphical\nconsole of any Windows server or workstation using RDP. RDP HTML5 console\nproxy services include FreeRDP, wsgate.\nSee https://github.com/FreeRDP/FreeRDP-WebConnect\n\nPossible values:\n\n* <scheme>://<ip-address>:<port-number>/\n\n  The scheme must be identical to the scheme configured for the RDP HTML5\n  console proxy service. It is ``http`` or ``https``.\n\n  The IP address must be identical to the address on which the RDP HTML5\n  console proxy service is listening.\n\n  The port must be identical to the port on which the RDP HTML5 console proxy\n  service is listening.\n\nRelated options:\n\n* ``rdp.enabled``: Must be set to ``True`` for ``html5_proxy_base_url`` to be\n  effective.\n')]

@p.trace('register_opts')
def register_opts(conf):
    conf.register_group(rdp_group)
    conf.register_opts(RDP_OPTS, rdp_group)

@p.trace('list_opts')
def list_opts():
    return {rdp_group: RDP_OPTS}