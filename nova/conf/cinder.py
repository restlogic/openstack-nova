from bees import profiler as p
from keystoneauth1 import loading as ks_loading
from oslo_config import cfg
cinder_group = cfg.OptGroup('cinder', title='Cinder Options', help='Configuration options for the block storage')
cinder_opts = [cfg.StrOpt('catalog_info', default='volumev3::publicURL', regex='^\\w+:\\w*:.*$', help='\nInfo to match when looking for cinder in the service catalog.\n\nThe ``<service_name>`` is optional and omitted by default since it should\nnot be necessary in most deployments.\n\nPossible values:\n\n* Format is separated values of the form:\n  <service_type>:<service_name>:<endpoint_type>\n\nNote: Nova does not support the Cinder v2 API since the Nova 17.0.0 Queens\nrelease.\n\nRelated options:\n\n* endpoint_template - Setting this option will override catalog_info\n'), cfg.StrOpt('endpoint_template', help='\nIf this option is set then it will override service catalog lookup with\nthis template for cinder endpoint\n\nPossible values:\n\n* URL for cinder endpoint API\n  e.g. http://localhost:8776/v3/%(project_id)s\n\nNote: Nova does not support the Cinder v2 API since the Nova 17.0.0 Queens\nrelease.\n\nRelated options:\n\n* catalog_info - If endpoint_template is not set, catalog_info will be used.\n'), cfg.StrOpt('os_region_name', help='\nRegion name of this node. This is used when picking the URL in the service\ncatalog.\n\nPossible values:\n\n* Any string representing region name\n'), cfg.IntOpt('http_retries', default=3, min=0, help='\nNumber of times cinderclient should retry on any failed http call.\n0 means connection is attempted only once. Setting it to any positive integer\nmeans that on failure connection is retried that many times e.g. setting it\nto 3 means total attempts to connect will be 4.\n\nPossible values:\n\n* Any integer value. 0 means connection is attempted only once\n'), cfg.BoolOpt('cross_az_attach', default=True, help='\nAllow attach between instance and volume in different availability zones.\n\nIf False, volumes attached to an instance must be in the same availability\nzone in Cinder as the instance availability zone in Nova.\n\nThis also means care should be taken when booting an instance from a volume\nwhere source is not "volume" because Nova will attempt to create a volume using\nthe same availability zone as what is assigned to the instance.\n\nIf that AZ is not in Cinder (or ``allow_availability_zone_fallback=False`` in\ncinder.conf), the volume create request will fail and the instance will fail\nthe build request.\n\nBy default there is no availability zone restriction on volume attach.\n\nRelated options:\n\n* ``[DEFAULT]/default_schedule_zone``\n')]

@p.trace('register_opts')
def register_opts(conf):
    conf.register_group(cinder_group)
    conf.register_opts(cinder_opts, group=cinder_group)
    ks_loading.register_session_conf_options(conf, cinder_group.name)
    ks_loading.register_auth_conf_options(conf, cinder_group.name)

@p.trace('list_opts')
def list_opts():
    return {cinder_group.name: cinder_opts + ks_loading.get_session_conf_options() + ks_loading.get_auth_common_conf_options() + ks_loading.get_auth_plugin_conf_options('password') + ks_loading.get_auth_plugin_conf_options('v2password') + ks_loading.get_auth_plugin_conf_options('v3password')}