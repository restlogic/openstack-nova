from bees import profiler as p
from oslo_config import cfg
notifications_group = cfg.OptGroup(name='notifications', title='Notifications options', help='\nMost of the actions in Nova which manipulate the system state generate\nnotifications which are posted to the messaging component (e.g. RabbitMQ) and\ncan be consumed by any service outside the OpenStack. More technical details\nat https://docs.openstack.org/nova/latest/reference/notifications.html\n')
ALL_OPTS = [cfg.StrOpt('notify_on_state_change', choices=[(None, 'no notifications'), ('vm_state', 'Notifications are sent with VM state transition information in the ``old_state`` and ``state`` fields. The ``old_task_state`` and ``new_task_state`` fields will be set to the current task_state of the instance'), ('vm_and_task_state', 'Notifications are sent with VM and task state transition information')], deprecated_group='DEFAULT', help='\nIf set, send compute.instance.update notifications on\ninstance state changes.\n\nPlease refer to\nhttps://docs.openstack.org/nova/latest/reference/notifications.html for\nadditional information on notifications.\n'), cfg.StrOpt('default_level', default='INFO', choices=('DEBUG', 'INFO', 'WARN', 'ERROR', 'CRITICAL'), deprecated_group='DEFAULT', deprecated_name='default_notification_level', help='Default notification level for outgoing notifications.'), cfg.StrOpt('notification_format', default='unversioned', choices=[('both', 'Both the legacy unversioned and the new versioned notifications are emitted'), ('versioned', 'Only the new versioned notifications are emitted'), ('unversioned', 'Only the legacy unversioned notifications are emitted')], deprecated_group='DEFAULT', help='\nSpecifies which notification format shall be emitted by nova.\n\nThe versioned notification interface are in feature parity with the legacy\ninterface and the versioned interface is actively developed so new consumers\nshould used the versioned interface.\n\nHowever, the legacy interface is heavily used by ceilometer and other mature\nOpenStack components so it remains the default.\n\nNote that notifications can be completely disabled by setting ``driver=noop``\nin the ``[oslo_messaging_notifications]`` group.\n\nThe list of versioned notifications is visible in\nhttps://docs.openstack.org/nova/latest/reference/notifications.html\n'), cfg.ListOpt('versioned_notifications_topics', default=['versioned_notifications'], help='\nSpecifies the topics for the versioned notifications issued by nova.\n\nThe default value is fine for most deployments and rarely needs to be changed.\nHowever, if you have a third-party service that consumes versioned\nnotifications, it might be worth getting a topic for that service.\nNova will send a message containing a versioned notification payload to each\ntopic queue in this list.\n\nThe list of versioned notifications is visible in\nhttps://docs.openstack.org/nova/latest/reference/notifications.html\n'), cfg.BoolOpt('bdms_in_notifications', default=False, help='\nIf enabled, include block device information in the versioned notification\npayload. Sending block device information is disabled by default as providing\nthat information can incur some overhead on the system since the information\nmay need to be loaded from the database.\n')]

@p.trace('register_opts')
def register_opts(conf):
    conf.register_group(notifications_group)
    conf.register_opts(ALL_OPTS, group=notifications_group)

@p.trace('list_opts')
def list_opts():
    return {notifications_group: ALL_OPTS}