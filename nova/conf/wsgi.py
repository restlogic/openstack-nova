from bees import profiler as p
from oslo_config import cfg
wsgi_group = cfg.OptGroup('wsgi', title='WSGI Options', help='\nOptions under this group are used to configure WSGI (Web Server Gateway\nInterface). WSGI is used to serve API requests.\n')
ALL_OPTS = [cfg.StrOpt('api_paste_config', default='api-paste.ini', deprecated_group='DEFAULT', help='\nThis option represents a file name for the paste.deploy config for nova-api.\n\nPossible values:\n\n* A string representing file name for the paste.deploy config.\n'), cfg.StrOpt('wsgi_log_format', default='%(client_ip)s "%(request_line)s" status: %(status_code)s len: %(body_length)s time: %(wall_seconds).7f', deprecated_group='DEFAULT', deprecated_for_removal=True, deprecated_since='16.0.0', deprecated_reason='\nThis option only works when running nova-api under eventlet, and\nencodes very eventlet specific pieces of information. Starting in Pike\nthe preferred model for running nova-api is under uwsgi or apache\nmod_wsgi.\n', help='\nIt represents a python format string that is used as the template to generate\nlog lines. The following values can be formatted into it: client_ip,\ndate_time, request_line, status_code, body_length, wall_seconds.\n\nThis option is used for building custom request loglines when running\nnova-api under eventlet. If used under uwsgi or apache, this option\nhas no effect.\n\nPossible values:\n\n* \'%(client_ip)s "%(request_line)s" status: %(status_code)s \'\n  \'len: %(body_length)s time: %(wall_seconds).7f\' (default)\n* Any formatted string formed by specific values.\n'), cfg.StrOpt('secure_proxy_ssl_header', deprecated_group='DEFAULT', help='\nThis option specifies the HTTP header used to determine the protocol scheme\nfor the original request, even if it was removed by a SSL terminating proxy.\n\nPossible values:\n\n* None (default) - the request scheme is not influenced by any HTTP headers\n* Valid HTTP header, like ``HTTP_X_FORWARDED_PROTO``\n\nWARNING: Do not set this unless you know what you are doing.\n\nMake sure ALL of the following are true before setting this (assuming the\nvalues from the example above):\n\n* Your API is behind a proxy.\n* Your proxy strips the X-Forwarded-Proto header from all incoming requests.\n  In other words, if end users include that header in their requests, the proxy\n  will discard it.\n* Your proxy sets the X-Forwarded-Proto header and sends it to API, but only\n  for requests that originally come in via HTTPS.\n\nIf any of those are not true, you should keep this setting set to None.\n'), cfg.StrOpt('ssl_ca_file', deprecated_group='DEFAULT', help='\nThis option allows setting path to the CA certificate file that should be used\nto verify connecting clients.\n\nPossible values:\n\n* String representing path to the CA certificate file.\n\nRelated options:\n\n* enabled_ssl_apis\n'), cfg.StrOpt('ssl_cert_file', deprecated_group='DEFAULT', help='\nThis option allows setting path to the SSL certificate of API server.\n\nPossible values:\n\n* String representing path to the SSL certificate.\n\nRelated options:\n\n* enabled_ssl_apis\n'), cfg.StrOpt('ssl_key_file', deprecated_group='DEFAULT', help='\nThis option specifies the path to the file where SSL private key of API\nserver is stored when SSL is in effect.\n\nPossible values:\n\n* String representing path to the SSL private key.\n\nRelated options:\n\n* enabled_ssl_apis\n'), cfg.IntOpt('tcp_keepidle', min=0, default=600, deprecated_group='DEFAULT', help='\nThis option sets the value of TCP_KEEPIDLE in seconds for each server socket.\nIt specifies the duration of time to keep connection active. TCP generates a\nKEEPALIVE transmission for an application that requests to keep connection\nactive. Not supported on OS X.\n\nRelated options:\n\n* keep_alive\n'), cfg.IntOpt('default_pool_size', min=0, default=1000, deprecated_group='DEFAULT', deprecated_name='wsgi_default_pool_size', help='\nThis option specifies the size of the pool of greenthreads used by wsgi.\nIt is possible to limit the number of concurrent connections using this\noption.\n'), cfg.IntOpt('max_header_line', min=0, default=16384, deprecated_group='DEFAULT', help='\nThis option specifies the maximum line size of message headers to be accepted.\nmax_header_line may need to be increased when using large tokens (typically\nthose generated by the Keystone v3 API with big service catalogs).\n\nSince TCP is a stream based protocol, in order to reuse a connection, the HTTP\nhas to have a way to indicate the end of the previous response and beginning\nof the next. Hence, in a keep_alive case, all messages must have a\nself-defined message length.\n'), cfg.BoolOpt('keep_alive', default=True, deprecated_group='DEFAULT', deprecated_name='wsgi_keep_alive', help='\nThis option allows using the same TCP connection to send and receive multiple\nHTTP requests/responses, as opposed to opening a new one for every single\nrequest/response pair. HTTP keep-alive indicates HTTP connection reuse.\n\nPossible values:\n\n* True : reuse HTTP connection.\n* False : closes the client socket connection explicitly.\n\nRelated options:\n\n* tcp_keepidle\n'), cfg.IntOpt('client_socket_timeout', min=0, default=900, deprecated_group='DEFAULT', help="\nThis option specifies the timeout for client connections' socket operations.\nIf an incoming connection is idle for this number of seconds it will be\nclosed. It indicates timeout on individual read/writes on the socket\nconnection. To wait forever set to 0.\n")]

@p.trace('register_opts')
def register_opts(conf):
    conf.register_group(wsgi_group)
    conf.register_opts(ALL_OPTS, group=wsgi_group)

@p.trace('list_opts')
def list_opts():
    return {wsgi_group: ALL_OPTS}