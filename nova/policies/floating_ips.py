from bees import profiler as p
from oslo_policy import policy
from nova.policies import base
ROOT_POLICY = 'os_compute_api:os-floating-ips'
BASE_POLICY_NAME = 'os_compute_api:os-floating-ips:%s'
DEPRECATED_FIP_POLICY = policy.DeprecatedRule(ROOT_POLICY, base.RULE_ADMIN_OR_OWNER)
DEPRECATED_REASON = '\nNova API policies are introducing new default roles with scope_type\ncapabilities. Old policies are deprecated and silently going to be ignored\nin nova 23.0.0 release.\n'
floating_ips_policies = [policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'add', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Associate floating IPs to server.  This API is deprecated.', operations=[{'method': 'POST', 'path': '/servers/{server_id}/action (addFloatingIp)'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0'), policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'remove', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Disassociate floating IPs to server.  This API is deprecated.', operations=[{'method': 'POST', 'path': '/servers/{server_id}/action (removeFloatingIp)'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0'), policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'list', check_str=base.PROJECT_READER_OR_SYSTEM_READER, description='List floating IPs. This API is deprecated.', operations=[{'method': 'GET', 'path': '/os-floating-ips'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0'), policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'create', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Create floating IPs. This API is deprecated.', operations=[{'method': 'POST', 'path': '/os-floating-ips'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0'), policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'show', check_str=base.PROJECT_READER_OR_SYSTEM_READER, description='Show floating IPs. This API is deprecated.', operations=[{'method': 'GET', 'path': '/os-floating-ips/{floating_ip_id}'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0'), policy.DocumentedRuleDefault(name=BASE_POLICY_NAME % 'delete', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Delete floating IPs. This API is deprecated.', operations=[{'method': 'DELETE', 'path': '/os-floating-ips/{floating_ip_id}'}], scope_types=['system', 'project'], deprecated_rule=DEPRECATED_FIP_POLICY, deprecated_reason=DEPRECATED_REASON, deprecated_since='22.0.0')]

@p.trace('list_rules')
def list_rules():
    return floating_ips_policies