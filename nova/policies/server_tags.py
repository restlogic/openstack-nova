from bees import profiler as p
from oslo_policy import policy
from nova.policies import base
POLICY_ROOT = 'os_compute_api:os-server-tags:%s'
server_tags_policies = [policy.DocumentedRuleDefault(name=POLICY_ROOT % 'delete_all', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Delete all the server tags', operations=[{'method': 'DELETE', 'path': '/servers/{server_id}/tags'}], scope_types=['system', 'project']), policy.DocumentedRuleDefault(name=POLICY_ROOT % 'index', check_str=base.PROJECT_READER_OR_SYSTEM_READER, description='List all tags for given server', operations=[{'method': 'GET', 'path': '/servers/{server_id}/tags'}], scope_types=['system', 'project']), policy.DocumentedRuleDefault(name=POLICY_ROOT % 'update_all', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Replace all tags on specified server with the new set of tags.', operations=[{'method': 'PUT', 'path': '/servers/{server_id}/tags'}], scope_types=['system', 'project']), policy.DocumentedRuleDefault(name=POLICY_ROOT % 'delete', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Delete a single tag from the specified server', operations=[{'method': 'DELETE', 'path': '/servers/{server_id}/tags/{tag}'}], scope_types=['system', 'project']), policy.DocumentedRuleDefault(name=POLICY_ROOT % 'update', check_str=base.PROJECT_MEMBER_OR_SYSTEM_ADMIN, description='Add a single tag to the server if server has no specified tag', operations=[{'method': 'PUT', 'path': '/servers/{server_id}/tags/{tag}'}], scope_types=['system', 'project']), policy.DocumentedRuleDefault(name=POLICY_ROOT % 'show', check_str=base.PROJECT_READER_OR_SYSTEM_READER, description='Check tag existence on the server.', operations=[{'method': 'GET', 'path': '/servers/{server_id}/tags/{tag}'}], scope_types=['system', 'project'])]

@p.trace('list_rules')
def list_rules():
    return server_tags_policies